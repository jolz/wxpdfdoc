# GNU Make project makefile autogenerated by Premake

ifndef config
  config=debug_win32
endif

ifndef verbose
  SILENT = @
endif

.PHONY: clean prebuild

SHELLTYPE := posix
ifeq ($(shell echo "test"), "test")
	SHELLTYPE := msdos
endif

# Configurations
# #############################################

ifeq ($(origin CC), default)
  CC = gcc
endif
ifeq ($(origin CXX), default)
  CXX = g++
endif
ifeq ($(origin AR), default)
  AR = ar
endif
RESCOMP = windres
INCLUDES += -I../thirdparty/woff2/include -I../thirdparty/woff2/src -I../thirdparty/woff2/brotli/include
FORCE_INCLUDE +=
ALL_CPPFLAGS += $(CPPFLAGS) -MD -MP $(DEFINES) $(INCLUDES)
ALL_RESFLAGS += $(RESFLAGS) $(DEFINES) $(INCLUDES)
LIBS +=
LDDEPS +=
LINKCMD = $(AR) -rcs "$@" $(OBJECTS)
include config.gcc

define PREBUILDCMDS
endef
define PRELINKCMDS
endef
define POSTBUILDCMDS
endef

ifeq ($(config),debug_win32)
TARGETDIR = lib/$(wxCompilerPrefix)/Win32/Debug
TARGET = $(TARGETDIR)/libwoff2.lib
OBJDIR = obj/libwoff2/$(wxCompilerPrefix)/Win32/Debug
DEFINES += -D_WINDOWS -D_CRT_SECURE_NO_WARNINGS -D_CRT_SECURE_NO_DEPRECATE -D_CRT_NONSTDC_NO_DEPRECATE -DDEBUG -D_DEBUG -D_LIB -DWOFF2_DUMMY
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m32 -g
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m32 -g -std=c++11
ALL_LDFLAGS += $(LDFLAGS) -L/usr/lib32 -m32

else ifeq ($(config),debug_win64)
TARGETDIR = lib/$(wxCompilerPrefix)/Win64/Debug
TARGET = $(TARGETDIR)/libwoff2.lib
OBJDIR = obj/libwoff2/$(wxCompilerPrefix)/Win64/Debug
DEFINES += -D_WINDOWS -D_CRT_SECURE_NO_WARNINGS -D_CRT_SECURE_NO_DEPRECATE -D_CRT_NONSTDC_NO_DEPRECATE -DDEBUG -D_DEBUG -D_LIB -DWOFF2_DUMMY
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -g
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -g -std=c++11
ALL_LDFLAGS += $(LDFLAGS) -L/usr/lib64 -m64

else ifeq ($(config),release_win32)
TARGETDIR = lib/$(wxCompilerPrefix)/Win32/Release
TARGET = $(TARGETDIR)/libwoff2.lib
OBJDIR = obj/libwoff2/$(wxCompilerPrefix)/Win32/Release
DEFINES += -D_WINDOWS -D_CRT_SECURE_NO_WARNINGS -D_CRT_SECURE_NO_DEPRECATE -D_CRT_NONSTDC_NO_DEPRECATE -DNDEBUG -D_LIB -DWOFF2_DUMMY
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m32 -O2
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m32 -O2 -std=c++11
ALL_LDFLAGS += $(LDFLAGS) -L/usr/lib32 -m32 -s

else ifeq ($(config),release_win64)
TARGETDIR = lib/$(wxCompilerPrefix)/Win64/Release
TARGET = $(TARGETDIR)/libwoff2.lib
OBJDIR = obj/libwoff2/$(wxCompilerPrefix)/Win64/Release
DEFINES += -D_WINDOWS -D_CRT_SECURE_NO_WARNINGS -D_CRT_SECURE_NO_DEPRECATE -D_CRT_NONSTDC_NO_DEPRECATE -DNDEBUG -D_LIB -DWOFF2_DUMMY
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -O2
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -O2 -std=c++11
ALL_LDFLAGS += $(LDFLAGS) -L/usr/lib64 -m64 -s

else ifeq ($(config),debug_wxdll_win32)
TARGETDIR = lib/$(wxCompilerPrefix)/Win32/Debug_wxDLL
TARGET = $(TARGETDIR)/libwoff2.lib
OBJDIR = obj/libwoff2/$(wxCompilerPrefix)/Win32/Debug_wxDLL
DEFINES += -D_WINDOWS -D_CRT_SECURE_NO_WARNINGS -D_CRT_SECURE_NO_DEPRECATE -D_CRT_NONSTDC_NO_DEPRECATE -DDEBUG -D_DEBUG -D_LIB -DWOFF2_DUMMY
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m32 -g
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m32 -g -std=c++11
ALL_LDFLAGS += $(LDFLAGS) -L/usr/lib32 -m32

else ifeq ($(config),debug_wxdll_win64)
TARGETDIR = lib/$(wxCompilerPrefix)/Win64/Debug_wxDLL
TARGET = $(TARGETDIR)/libwoff2.lib
OBJDIR = obj/libwoff2/$(wxCompilerPrefix)/Win64/Debug_wxDLL
DEFINES += -D_WINDOWS -D_CRT_SECURE_NO_WARNINGS -D_CRT_SECURE_NO_DEPRECATE -D_CRT_NONSTDC_NO_DEPRECATE -DDEBUG -D_DEBUG -D_LIB -DWOFF2_DUMMY
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -g
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -g -std=c++11
ALL_LDFLAGS += $(LDFLAGS) -L/usr/lib64 -m64

else ifeq ($(config),release_wxdll_win32)
TARGETDIR = lib/$(wxCompilerPrefix)/Win32/Release_wxDLL
TARGET = $(TARGETDIR)/libwoff2.lib
OBJDIR = obj/libwoff2/$(wxCompilerPrefix)/Win32/Release_wxDLL
DEFINES += -D_WINDOWS -D_CRT_SECURE_NO_WARNINGS -D_CRT_SECURE_NO_DEPRECATE -D_CRT_NONSTDC_NO_DEPRECATE -DNDEBUG -D_LIB -DWOFF2_DUMMY
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m32 -O2
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m32 -O2 -std=c++11
ALL_LDFLAGS += $(LDFLAGS) -L/usr/lib32 -m32 -s

else ifeq ($(config),release_wxdll_win64)
TARGETDIR = lib/$(wxCompilerPrefix)/Win64/Release_wxDLL
TARGET = $(TARGETDIR)/libwoff2.lib
OBJDIR = obj/libwoff2/$(wxCompilerPrefix)/Win64/Release_wxDLL
DEFINES += -D_WINDOWS -D_CRT_SECURE_NO_WARNINGS -D_CRT_SECURE_NO_DEPRECATE -D_CRT_NONSTDC_NO_DEPRECATE -DNDEBUG -D_LIB -DWOFF2_DUMMY
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -O2
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -O2 -std=c++11
ALL_LDFLAGS += $(LDFLAGS) -L/usr/lib64 -m64 -s

else ifeq ($(config),debug_dll_win32)
TARGETDIR = lib/$(wxCompilerPrefix)/Win32/Debug_DLL
TARGET = $(TARGETDIR)/libwoff2.lib
OBJDIR = obj/libwoff2/$(wxCompilerPrefix)/Win32/Debug_DLL
DEFINES += -D_WINDOWS -D_CRT_SECURE_NO_WARNINGS -D_CRT_SECURE_NO_DEPRECATE -D_CRT_NONSTDC_NO_DEPRECATE -DDEBUG -D_DEBUG -D_LIB -DWOFF2_DUMMY
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m32 -g
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m32 -g -std=c++11
ALL_LDFLAGS += $(LDFLAGS) -L/usr/lib32 -m32

else ifeq ($(config),debug_dll_win64)
TARGETDIR = lib/$(wxCompilerPrefix)/Win64/Debug_DLL
TARGET = $(TARGETDIR)/libwoff2.lib
OBJDIR = obj/libwoff2/$(wxCompilerPrefix)/Win64/Debug_DLL
DEFINES += -D_WINDOWS -D_CRT_SECURE_NO_WARNINGS -D_CRT_SECURE_NO_DEPRECATE -D_CRT_NONSTDC_NO_DEPRECATE -DDEBUG -D_DEBUG -D_LIB -DWOFF2_DUMMY
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -g
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -g -std=c++11
ALL_LDFLAGS += $(LDFLAGS) -L/usr/lib64 -m64

else ifeq ($(config),release_dll_win32)
TARGETDIR = lib/$(wxCompilerPrefix)/Win32/Release_DLL
TARGET = $(TARGETDIR)/libwoff2.lib
OBJDIR = obj/libwoff2/$(wxCompilerPrefix)/Win32/Release_DLL
DEFINES += -D_WINDOWS -D_CRT_SECURE_NO_WARNINGS -D_CRT_SECURE_NO_DEPRECATE -D_CRT_NONSTDC_NO_DEPRECATE -DNDEBUG -D_LIB -DWOFF2_DUMMY
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m32 -O2
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m32 -O2 -std=c++11
ALL_LDFLAGS += $(LDFLAGS) -L/usr/lib32 -m32 -s

else ifeq ($(config),release_dll_win64)
TARGETDIR = lib/$(wxCompilerPrefix)/Win64/Release_DLL
TARGET = $(TARGETDIR)/libwoff2.lib
OBJDIR = obj/libwoff2/$(wxCompilerPrefix)/Win64/Release_DLL
DEFINES += -D_WINDOWS -D_CRT_SECURE_NO_WARNINGS -D_CRT_SECURE_NO_DEPRECATE -D_CRT_NONSTDC_NO_DEPRECATE -DNDEBUG -D_LIB -DWOFF2_DUMMY
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -O2
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -O2 -std=c++11
ALL_LDFLAGS += $(LDFLAGS) -L/usr/lib64 -m64 -s

endif

# Per File Configurations
# #############################################


# File sets
# #############################################

GENERATED :=
OBJECTS :=

GENERATED += $(OBJDIR)/bit_reader.o
GENERATED += $(OBJDIR)/constants.o
GENERATED += $(OBJDIR)/context.o
GENERATED += $(OBJDIR)/decode.o
GENERATED += $(OBJDIR)/dictionary.o
GENERATED += $(OBJDIR)/huffman.o
GENERATED += $(OBJDIR)/platform.o
GENERATED += $(OBJDIR)/shared_dictionary.o
GENERATED += $(OBJDIR)/state.o
GENERATED += $(OBJDIR)/table_tags.o
GENERATED += $(OBJDIR)/transform.o
GENERATED += $(OBJDIR)/variable_length.o
GENERATED += $(OBJDIR)/woff2_common.o
GENERATED += $(OBJDIR)/woff2_dec.o
GENERATED += $(OBJDIR)/woff2_out.o
OBJECTS += $(OBJDIR)/bit_reader.o
OBJECTS += $(OBJDIR)/constants.o
OBJECTS += $(OBJDIR)/context.o
OBJECTS += $(OBJDIR)/decode.o
OBJECTS += $(OBJDIR)/dictionary.o
OBJECTS += $(OBJDIR)/huffman.o
OBJECTS += $(OBJDIR)/platform.o
OBJECTS += $(OBJDIR)/shared_dictionary.o
OBJECTS += $(OBJDIR)/state.o
OBJECTS += $(OBJDIR)/table_tags.o
OBJECTS += $(OBJDIR)/transform.o
OBJECTS += $(OBJDIR)/variable_length.o
OBJECTS += $(OBJDIR)/woff2_common.o
OBJECTS += $(OBJDIR)/woff2_dec.o
OBJECTS += $(OBJDIR)/woff2_out.o

# Rules
# #############################################

all: $(TARGET)
	@:

$(TARGET): $(GENERATED) $(OBJECTS) $(LDDEPS) | $(TARGETDIR)
	$(PRELINKCMDS)
	@echo Linking libwoff2
	$(SILENT) $(LINKCMD)
	$(POSTBUILDCMDS)

$(TARGETDIR):
	@echo Creating $(TARGETDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(TARGETDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(TARGETDIR))
endif

$(OBJDIR):
	@echo Creating $(OBJDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(OBJDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(OBJDIR))
endif

clean:
	@echo Cleaning libwoff2
ifeq (posix,$(SHELLTYPE))
	$(SILENT) rm -f  $(TARGET)
	$(SILENT) rm -rf $(GENERATED)
	$(SILENT) rm -rf $(OBJDIR)
else
	$(SILENT) if exist $(subst /,\\,$(TARGET)) del $(subst /,\\,$(TARGET))
	$(SILENT) if exist $(subst /,\\,$(GENERATED)) del /s /q $(subst /,\\,$(GENERATED))
	$(SILENT) if exist $(subst /,\\,$(OBJDIR)) rmdir /s /q $(subst /,\\,$(OBJDIR))
endif

prebuild: | $(OBJDIR)
	$(PREBUILDCMDS)

ifneq (,$(PCH))
$(OBJECTS): $(GCH) | $(PCH_PLACEHOLDER)
$(GCH): $(PCH) | prebuild
	@echo $(notdir $<)
	$(SILENT) $(CXX) -x c++-header $(ALL_CXXFLAGS) -o "$@" -MF "$(@:%.gch=%.d)" -c "$<"
$(PCH_PLACEHOLDER): $(GCH) | $(OBJDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) touch "$@"
else
	$(SILENT) echo $null >> "$@"
endif
else
$(OBJECTS): | prebuild
endif


# File Rules
# #############################################

$(OBJDIR)/bit_reader.o: ../thirdparty/woff2/brotli/dec/bit_reader.c
	@echo "$(notdir $<)"
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/constants.o: ../thirdparty/woff2/brotli/common/constants.c
	@echo "$(notdir $<)"
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/context.o: ../thirdparty/woff2/brotli/common/context.c
	@echo "$(notdir $<)"
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/decode.o: ../thirdparty/woff2/brotli/dec/decode.c
	@echo "$(notdir $<)"
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/dictionary.o: ../thirdparty/woff2/brotli/common/dictionary.c
	@echo "$(notdir $<)"
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/huffman.o: ../thirdparty/woff2/brotli/dec/huffman.c
	@echo "$(notdir $<)"
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/platform.o: ../thirdparty/woff2/brotli/common/platform.c
	@echo "$(notdir $<)"
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/shared_dictionary.o: ../thirdparty/woff2/brotli/common/shared_dictionary.c
	@echo "$(notdir $<)"
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/state.o: ../thirdparty/woff2/brotli/dec/state.c
	@echo "$(notdir $<)"
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/table_tags.o: ../thirdparty/woff2/src/table_tags.cc
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/transform.o: ../thirdparty/woff2/brotli/common/transform.c
	@echo "$(notdir $<)"
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/variable_length.o: ../thirdparty/woff2/src/variable_length.cc
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/woff2_common.o: ../thirdparty/woff2/src/woff2_common.cc
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/woff2_dec.o: ../thirdparty/woff2/src/woff2_dec.cc
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/woff2_out.o: ../thirdparty/woff2/src/woff2_out.cc
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"

-include $(OBJECTS:%.o=%.d)
ifneq (,$(PCH))
  -include $(PCH_PLACEHOLDER).d
endif